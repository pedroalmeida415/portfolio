class LZMA{static initBitModels(e,t){for(;t--;)e[t]=1024}static reverseDecode2(e,t,i,s){let r=1,o=0,d=0,h;for(;d<s;++d)h=i.decodeBit(e,t+r),r=r<<1|h,o|=h<<d;return o}static decompressFile(e,t){e instanceof ArrayBuffer&&(e=new iStream(e)),t||(t=new oStream);let i=new Decoder,s=i.decodeHeader(e),r=s.uncompressedSize;if(i.setProperties(s),!i.decodeBody(e,t,r))throw Error("Error in lzma data stream");return t}}Object.freeze(LZMA);class OutWindow{constructor(){this._windowSize=0}create(e){this._buffer&&this._windowSize===e||(this._buffer=new Uint8Array(e)),this._windowSize=e,this._pos=0,this._streamPos=0}flush(){let e=this._pos-this._streamPos;if(0!==e){if(this._stream.writeBytes)this._stream.writeBytes(this._buffer,e);else for(let t=0;t<e;++t)this._stream.writeByte(this._buffer[t]);this._pos>=this._windowSize&&(this._pos=0),this._streamPos=this._pos}}releaseStream(){this.flush(),this._stream=null}setStream(e){this.releaseStream(),this._stream=e}init(e){e||(this._streamPos=0,this._pos=0)}copyBlock(e,t){let i=this._pos-e-1;for(i<0&&(i+=this._windowSize);t--;)i>=this._windowSize&&(i=0),this._buffer[this._pos++]=this._buffer[i++],this._pos>=this._windowSize&&this.flush()}putByte(e){this._buffer[this._pos++]=e,this._pos>=this._windowSize&&this.flush()}getByte(e){let t=this._pos-e-1;return t<0&&(t+=this._windowSize),this._buffer[t]}}Object.freeze(OutWindow);class RangeDecoder{constructor(){}setStream(e){this._stream=e}releaseStream(){this._stream=null}init(){let e=5;for(this._code=0,this._range=-1;e--;)this._code=this._code<<8|this._stream.readByte()}decodeDirectBits(e){let t=0,i=e,s;for(;i--;)this._range>>>=1,s=this._code-this._range>>>31,this._code-=this._range&s-1,t=t<<1|1-s,(4278190080&this._range)==0&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return t}decodeBit(e,t){let i=e[t],s=(this._range>>>11)*i;return(2147483648^this._code)<(2147483648^s)?(this._range=s,e[t]+=2048-i>>>5,(4278190080&this._range)==0&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0):(this._range-=s,this._code-=s,e[t]-=i>>>5,(4278190080&this._range)==0&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),1)}}Object.freeze(RangeDecoder);class BitTreeDecoder{constructor(e){this._models=[],this._numBitLevels=e}init(){LZMA.initBitModels(this._models,1<<this._numBitLevels)}decode(e){let t=1,i=this._numBitLevels;for(;i--;)t=t<<1|e.decodeBit(this._models,t);return t-(1<<this._numBitLevels)}reverseDecode(e){let t=1,i=0,s=0,r;for(;s<this._numBitLevels;++s)r=e.decodeBit(this._models,t),t=t<<1|r,i|=r<<s;return i}}Object.freeze(BitTreeDecoder);class LenDecoder{constructor(){this._choice=[],this._lowCoder=[],this._midCoder=[],this._highCoder=new BitTreeDecoder(8),this._numPosStates=0}create(e){for(;this._numPosStates<e;++this._numPosStates)this._lowCoder[this._numPosStates]=new BitTreeDecoder(3),this._midCoder[this._numPosStates]=new BitTreeDecoder(3)}init(){let e=this._numPosStates;for(LZMA.initBitModels(this._choice,2);e--;)this._lowCoder[e].init(),this._midCoder[e].init();this._highCoder.init()}decode(e,t){return 0===e.decodeBit(this._choice,0)?this._lowCoder[t].decode(e):0===e.decodeBit(this._choice,1)?8+this._midCoder[t].decode(e):16+this._highCoder.decode(e)}}Object.freeze(LenDecoder);class Decoder2{constructor(){this._decoders=[]}init(){LZMA.initBitModels(this._decoders,768)}decodeNormal(e){let t=1;do t=t<<1|e.decodeBit(this._decoders,t);while(t<256);return 255&t}decodeWithMatchByte(e,t){let i=1,s,r;do if(s=t>>7&1,t<<=1,r=e.decodeBit(this._decoders,(1+s<<8)+i),i=i<<1|r,s!==r){for(;i<256;)i=i<<1|e.decodeBit(this._decoders,i);break}while(i<256);return 255&i}}Object.freeze(Decoder2);class LiteralDecoder{constructor(){}create(e,t){let i;if(!this._coders||this._numPrevBits!==t||this._numPosBits!==e)for(this._numPosBits=e,this._posMask=(1<<e)-1,this._numPrevBits=t,this._coders=[],i=1<<this._numPrevBits+this._numPosBits;i--;)this._coders[i]=new Decoder2}init(){let e=1<<this._numPrevBits+this._numPosBits;for(;e--;)this._coders[e].init()}getDecoder(e,t){return this._coders[((e&this._posMask)<<this._numPrevBits)+((255&t)>>>8-this._numPrevBits)]}}Object.freeze(LiteralDecoder);class Decoder{constructor(){this._outWindow=new OutWindow,this._rangeDecoder=new RangeDecoder,this._isMatchDecoders=[],this._isRepDecoders=[],this._isRepG0Decoders=[],this._isRepG1Decoders=[],this._isRepG2Decoders=[],this._isRep0LongDecoders=[],this._posSlotDecoder=[],this._posDecoders=[],this._posAlignDecoder=new BitTreeDecoder(4),this._lenDecoder=new LenDecoder,this._repLenDecoder=new LenDecoder,this._literalDecoder=new LiteralDecoder,this._dictionarySize=-1,this._dictionarySizeCheck=-1,this._posSlotDecoder[0]=new BitTreeDecoder(6),this._posSlotDecoder[1]=new BitTreeDecoder(6),this._posSlotDecoder[2]=new BitTreeDecoder(6),this._posSlotDecoder[3]=new BitTreeDecoder(6)}setDictionarySize(e){return!(e<0)&&(this._dictionarySize!==e&&(this._dictionarySize=e,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096))),!0)}setLcLpPb(e,t,i){let s=1<<i;return!(e>8)&&!(t>4)&&!(i>4)&&(this._literalDecoder.create(t,e),this._lenDecoder.create(s),this._repLenDecoder.create(s),this._posStateMask=s-1,!0)}setProperties(e){if(!this.setLcLpPb(e.lc,e.lp,e.pb))throw Error("Incorrect stream properties");if(!this.setDictionarySize(e.dictionarySize))throw Error("Invalid dictionary size")}decodeHeader(e){let t,i,s,r,o,d;return!(e.size<13)&&(i=(t=e.readByte())%9,s=(t=~~(t/9))%5,r=~~(t/5),d=e.readByte(),d|=e.readByte()<<8,d|=e.readByte()<<16,d+=16777216*e.readByte(),o=e.readByte(),o|=e.readByte()<<8,o|=e.readByte()<<16,o+=16777216*e.readByte(),e.readByte(),e.readByte(),e.readByte(),e.readByte(),{lc:i,lp:s,pb:r,dictionarySize:d,uncompressedSize:o})}init(){let e=4;for(this._outWindow.init(!1),LZMA.initBitModels(this._isMatchDecoders,192),LZMA.initBitModels(this._isRep0LongDecoders,192),LZMA.initBitModels(this._isRepDecoders,12),LZMA.initBitModels(this._isRepG0Decoders,12),LZMA.initBitModels(this._isRepG1Decoders,12),LZMA.initBitModels(this._isRepG2Decoders,12),LZMA.initBitModels(this._posDecoders,114),this._literalDecoder.init();e--;)this._posSlotDecoder[e].init();this._lenDecoder.init(),this._repLenDecoder.init(),this._posAlignDecoder.init(),this._rangeDecoder.init()}decodeBody(e,t,i){let s=0,r=0,o=0,d=0,h=0,c=0,n=0,a,l,$,f,D,u;for(this._rangeDecoder.setStream(e),this._outWindow.setStream(t),this.init();i<0||c<i;)if(a=c&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(s<<4)+a))l=this._literalDecoder.getDecoder(c++,n),n=s>=7?l.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(r)):l.decodeNormal(this._rangeDecoder),this._outWindow.putByte(n),s=s<4?0:s-(s<10?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,s))$=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,s)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(s<<4)+a)&&(s=s<7?9:11,$=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,s)?f=o:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,s)?f=d:(f=h,h=d),d=o),o=r,r=f),0===$&&($=2+this._repLenDecoder.decode(this._rangeDecoder,a),s=s<7?8:11);else if(h=d,d=o,o=r,$=2+this._lenDecoder.decode(this._rangeDecoder,a),s=s<7?7:10,(D=this._posSlotDecoder[$<=5?$-2:3].decode(this._rangeDecoder))>=4){if(u=(D>>1)-1,r=(2|1&D)<<u,D<14)r+=LZMA.reverseDecode2(this._posDecoders,r-D-1,this._rangeDecoder,u);else if(r+=this._rangeDecoder.decodeDirectBits(u-4)<<4,(r+=this._posAlignDecoder.reverseDecode(this._rangeDecoder))<0){if(-1===r)break;return!1}}else r=D;if(r>=c||r>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(r,$),c+=$,n=this._outWindow.getByte(0)}return this._outWindow.flush(),this._outWindow.releaseStream(),this._rangeDecoder.releaseStream(),!0}setDecoderProperties(e){let t,i,s,r,o;return!(e.size<5)&&(i=(t=e.readByte())%9,s=(t=~~(t/9))%5,r=~~(t/5),!!this.setLcLpPb(i,s,r)&&(o=e.readByte(),o|=e.readByte()<<8,o|=e.readByte()<<16,o+=16777216*e.readByte(),this.setDictionarySize(o)))}}Object.freeze(Decoder);class iStream{constructor(e){this.array=new Uint8Array(e),this.size=e.byteLength,this.offset=0}readByte(){return this.array[this.offset++]}}Object.freeze(iStream);class oStream{constructor(e){this.size=0,this.buffers=[],e=e||[];for(let t=0,i=e.length;t<i;++t)if(e[t]instanceof oStream){let s=e[t].buffers;for(let r=0;r<s.length;++r)this.buffers.push(e[t].buffers[r]),this.size+=e[t].buffers[r].length}else this.buffers.push(e[t]),this.size+=e[t].length}writeBytes(e,t){if(t<=e.byteLength)this.buffers.push(e.slice(0,t));else throw Error("Buffer too small?");this.size+=t}toUint8Array(){let e=this.buffers;return 1==e.length?e[0]:null}}Object.freeze(oStream);export{LZMA};